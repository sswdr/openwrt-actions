# 使用拉出的编译仓库环境编译

name: test

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      repo_url_branch:
        description: '编译仓库及分支'
        required: true
        default: https://github.com/rin0612/lede -b backup.2022.04.25
      backup_env_url:
        description: '是否加载离线编译环境中的dl包(为空则通过Makefile下载对应dl,导入文件后会通过hash值校验通过则跳过下载)'
        required: false
        default: https://github.com/sswdr/openwrt-actions/releases/download/backup_build_env_2024.02.17.0052/workdir.tar.gz
      extra_apps_sh:
        description: '插件扩展仓库/feeds调整脚本'
        required: false
        default: extra-apps.sh
      config_file:
        description: '编译配置.config文件'
        required: true
        default: build.config/backup_build_env_2022.04.25.1800/general-v2.config
      make_defconfig:
        description: '是否执行make defconfig(不执行make defconfig将以当前.config直接编译,修改仓库时不会引入其他默认选上的不需要的依赖)'
        required: true
        default: false
      build_config:
        description: '自定义配置: 主机ip地址,主机名,内核版本,默认主题(luci-theme-bootstrap/luci-theme-argonne,在.config必须包含这个主题)'
        required: true
        default: "{\"host_ip\":\"192.168.5.25\",\"host_name\":\"sswOpenWrt\",\"kernel_patchver\":\"5.10\",\"default_theme\":\"luci-theme-argonne\"}"
      output_config:
        description: '编译输出配置: 编译bin到artifact,编译env到artifact,编译env带dl到artifact,编译bin到releases,编译env到releases,编译env带dl到releases'
        required: true
        default: "{\"artifact_bin\":true,\"artifact_env\":true,\"artifact_env_dl\":true,\"releases_bin\":true,\"releases_env\":true,\"releases_env_dl\":true}"


env:
  repo_url_branch: ${{ github.event.inputs.repo_url_branch }}
  backup_env_url: ${{ github.event.inputs.backup_env_url }}
  extra_apps_sh: ${{ github.event.inputs.extra_apps_sh }}
  config_file: ${{ github.event.inputs.config_file }}
  make_defconfig: ${{ github.event.inputs.make_defconfig }}
  build_config_host_ip: ${{fromJSON(github.event.inputs.build_config).host_ip}}
  build_config_host_name: ${{fromJSON(github.event.inputs.build_config).host_name}}
  build_config_kernel_patchver: ${{fromJSON(github.event.inputs.build_config).kernel_patchver}}
  build_config_default_theme: ${{fromJSON(github.event.inputs.build_config).default_theme}}
  output_config_artifact_bin: ${{fromJSON(github.event.inputs.output_config).artifact_bin}}
  output_config_artifact_env: ${{fromJSON(github.event.inputs.output_config).artifact_env}}
  output_config_artifact_env_dl: ${{fromJSON(github.event.inputs.output_config).artifact_env_dl}}
  output_config_releases_bin: ${{fromJSON(github.event.inputs.output_config).releases_bin}}
  output_config_releases_env: ${{fromJSON(github.event.inputs.output_config).artifact_bin}}
  output_config_releases_env_dl: ${{fromJSON(github.event.inputs.output_config).artifact_bin}}

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:

    - name: if_output_config_artifact_bin
      if: env.output_config_artifact_bin == 'true'
      run: |
        echo $env
        echo $output_config_artifact_bin
        echo $output_config_artifact_env
        echo $output_config_releases_env_dl

    - name: if_not_null
      if: env.backup_env_url != ''
      run: |
        echo $backup_env_url

    - name: if_null
      if: env.backup_env_url == ''
      run: |
        echo $backup_env_url
