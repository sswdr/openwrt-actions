# 导出编译环境
# TODO 待编译的action确认完成后，同步这里的每个step操作

name: part-export-build-env

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: 5.10-lede+kenzok8-max-v3.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        # 清理多余文件，腾出磁盘空间
        docker rmi $(docker images -q)
        # sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        # sudo rm -rf /etc/mysql /etc/php /swapfile

    - name: 克隆源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 压缩编译环境
      run: |
        sudo tar -zcvf /workdir.tar.gz /workdir/ 2>&1 1>/dev/null | grep -i "error"
        sudo tar -zcvf /home.tar.gz /home/runner/work/ 2>&1 1>/dev/null | grep -i "error"
        echo "PACKAGED_OUTPUTPATH=/workdir.tar.gz,/home.tar.gz" >>$GITHUB_ENV
        echo "PACKAGED_OUTPUTDATE=$(date +"%Y.%m.%d.%H%M")" >>$GITHUB_ENV

    - name: 编译环境导出
      uses: rin0612/release-action@v1
      with:
        tag: backup_build_env_${{ env.PACKAGED_OUTPUTDATE }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ### **编译环境导出_${{ env.PACKAGED_OUTPUTDATE }}**
