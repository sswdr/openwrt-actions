# 推送文件到releases

name: part-push-releases

on:
  repository_dispatch:
  workflow_dispatch:

# 任意的变量
env:
  VERSION: v1
  DATE: 2024.02.02

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: 准备需要推送到releases的文件
      run: |
        echo "----------准备将/opt/2024/*推送到releases--------------"
        mkdir -p /opt/2024
        dd if=/dev/zero of=/opt/2024/tmp.tar.gz bs=1 count=1
        cd /opt/2024
        echo "----------保存推送文件和推送日期信息的到环境变量-------"
        echo "PACKAGED_OUTPUTDATE=$(date +"%Y.%m.%d.%H%M")" >>$GITHUB_ENV
        echo "PACKAGED_OUTPUTPATH=${PWD}" >>$GITHUB_ENV

    - name: 准备releases的body正文的文件
      run: |
        cd / && sudo touch bodyFile.txt && sudo chown $USER:$GROUPS bodyFile.txt
        echo "RELEASES_BODY_FILE=/bodyFile.txt" >>$GITHUB_ENV
        
        echo "1 line" >> bodyFile.txt
        echo "${{ toJson(env) }}" >> bodyFile.txt
        echo "3 line" >> bodyFile.txt
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c)"

    - name: 推送文件到releases,如果tag不存在会创建
      uses: rin0612/release-action@v1
      with:
        tag: ${{ env.PACKAGED_OUTPUTDATE }}_releases的tag
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        # 也可以是文件当releases的body
        bodyFile: ${{ env.RELEASES_BODY_FILE }}
        # 可以是直接写入releases的body
        #body: |
        #  ### **${{ env.PACKAGED_OUTPUTDATE }}_releases的body适用于md语法**
