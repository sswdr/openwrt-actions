# rootfs.tar.gz和kernel与n1打包脚本制作镜像

name: part-packit-img

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: rootfs和n1处理脚本与内核等配置打包n1镜像
      uses: rin0612/openwrt_packit@backup.2022.04.25
      env:
        # 使用的打包仓库和分支
        PACKIT_REPO_URL: https://github.com/rin0612/openwrt_packit
        PACKIT_REPO_BRANCH: backup.2022.04.25
        # rootfs文件可以是下载的http连接,也可以是文件目录
        # TODO 文件目录的待编译part完成后测试
        # OPENWRT_ARMVIRT: /workdir/openwrt/bin/targets/*/*/*.tar.gz
        OPENWRT_ARMVIRT: https://github.com/sswdr/openwrt-actions/releases/download/openwrt_N1_2022.04.29.1427/openwrt-armvirt-64-default-rootfs.tar.gz
        # 使用的内核下载链接: ${KERNEL_REPO_URL}/${KERNEL_VERSION}.tar.gz
        KERNEL_REPO_URL: https://github.com/rin0612/openwrt_packit/releases/download/kernel_stable
        KERNEL_VERSION: 5.10.110
        # 执行的打包脚本
        RUN_SH: mk_s905d_n1.sh
        # KERNEL_VERSION_NAME用于打包仓库中的make.env的KERNEL_VERSION,用于选择并打包的内核
        KERNEL_VERSION_NAME: 5.10.110-flippy-71+
        # 以下信息打入镜像内,仅仅展示作用
        WHOAMI: 杀生丸大人
        OPENWRT_VER: R22.4.1

    - name: 推送文件到releases,如果tag不存在会创建
      uses: rin0612/release-action@v1.14.0
      with:
        tag: ${{ env.PACKAGED_OUTPUTDATE }}_releases的tag
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        # omitBody默认值为false,即覆盖原先的正文.true则不更新release的body正文
        omitBody: true
        body: |
          ### **${{ env.PACKAGED_OUTPUTDATE }}_releases的budy适用于md语法**
